<!DOCTYPE html>
<html>

<head>
    <%- include('../partials/html_head', {title: 'View Invoice' }); %>
</head>

<body>

    <div class="row">
      <div class="col-6 mx-auto mt-4 card-body border-thick-red" style="padding: 50px 0;">
        <div class="col-8 mx-auto text-center">

          <div class="row">
            <label class="form-control-label">Enter your Private Key:</label>
            <textarea id="privateKey" class="form-control" placeholder="Private Key" required></textarea>
          </div>

          <div class="row my-3">
            <div class="col-8 mx-auto">
              <input class="form-control" type="password" id="passphrase" placeholder="Enter your passphrase" required>
            </div>
          </div>
          
          <button class="btn btn-default" id="decryptInvoice" onclick="decrypt()">Decrypt Invoice</button>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-6">
        <!-- Hidden from the user, only used to store the encrypted invoice for the js function -->
        <p id="encryptedInvoice" style="visibility: hidden; display:none;"><%= invoice.encryptedData %></p>
      </div>
    </div>

    

    <script src="/javascripts/components/init/kbpgp-2.1.0-min.js"></script>
    <script>

        

        function decryptDocument(buyer_pgp_private_key, buyer_passphrase, message) {
            kbpgp.KeyManager.import_from_armored_pgp({
                armored: buyer_pgp_private_key
            }, function(err, buyer_key_manager) {
                if (!err) {
                    if (buyer_key_manager.is_pgp_locked()) {
                        buyer_key_manager.unlock_pgp({
                            passphrase: buyer_passphrase
                        }, function(err) {
                            if (!err) {
                                console.log("Loaded private key with passphrase")
                            }
                        })
                    } else {
                        console.log("Loaded private key w/o passphrase")
                    }
                }

                var ring = new kbpgp.keyring.KeyRing
                ring.add_key_manager(buyer_key_manager)

                kbpgp.unbox({
                    keyfetch: ring,
                    armored: message
                }, function(err, literals) {
                    if (err != null) {
                        return console.log("Problem: " + err)
                    } else {
                        console.log("decrypted message")

                        var decryptedMessage = literals[0].toString()
                        console.log(decryptedMessage)
                        
                        var obj = document.createElement('object');
                        obj.style.width = '100%';
                        obj.style.height = '842pt';
                        obj.type = 'application/pdf';
                        obj.data = 'data:application/pdf;base64,' + decryptedMessage;
                        document.body.appendChild(obj);
                    }
                })
            })
        }

        function decrypt(){
            buyer_pgp_private_key = document.getElementById('privateKey').value
            buyer_passphrase = document.getElementById('passphrase').value
            message = document.getElementById('encryptedInvoice').innerHTML

            decryptDocument(buyer_pgp_private_key, buyer_passphrase, message)
        }
    </script>
</body>